Traceback (most recent call last):
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/ols-stats/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
cohorts = [x.lower() for x in list(role_count_df.index)]
labels = [x.lower() for x in red_roles] + ["alumni"]
role_flow_df = pd.DataFrame({
    "source": [l for subl in [[l]*len(labels) for l in labels] for l in subl], 
    "target": labels*len(labels), 
    "value": 0
})

for index, row in role_flow_df.iterrows():
    if row.source == "alumni":
        continue
    elif row.target == "alumni":
        for i in range(len(cohorts)-1):
            source = f"{cohorts[i]}-{row.source}"
            # build query with any role in the cohort and no role after in the following cohort
            query = f"`{source}` != ''"
            for r in red_roles:
                target = f"{cohorts[i+1]}-{r.lower()}"
                query += f"and `{target}` == ''"
            role_flow_df.at[index, "value"] += len(people_df.query(query))
    else:
        for i in range(len(cohorts)-1):
            source = f"{cohorts[i]}-{row.source}"
            target = f"{cohorts[i+1]}-{row.target}"
            # build query the source role for a cohort and target role for the following cohort
            query = f"`{source}` != '' and `{target}` != ''"
            query_res = people_df.query(query)
            # check for each result how many roles in cohort and following cohort to normalize the value
            value = 0
            new_role_nb = len(q_r[f"{cohorts[i+1]}-role"].split(","))
            for q_i, q_r in query_res.iterrows():
                value += 1/(new_role_nb)
            role_flow_df.at[index, "value"] += value
role_flow_df
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[11], line 30[0m
[1;32m     28[0m [38;5;66;03m# check for each result how many roles in cohort and following cohort to normalize the value[39;00m
[1;32m     29[0m value [38;5;241m=[39m [38;5;241m0[39m
[0;32m---> 30[0m new_role_nb [38;5;241m=[39m [38;5;28mlen[39m([43mq_r[49m[[38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mcohorts[i[38;5;241m+[39m[38;5;241m1[39m][38;5;132;01m}[39;00m[38;5;124m-role[39m[38;5;124m"[39m][38;5;241m.[39msplit([38;5;124m"[39m[38;5;124m,[39m[38;5;124m"[39m))
[1;32m     31[0m [38;5;28;01mfor[39;00m q_i, q_r [38;5;129;01min[39;00m query_res[38;5;241m.[39miterrows():
[1;32m     32[0m     value [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m[38;5;241m/[39m(new_role_nb)

[0;31mNameError[0m: name 'q_r' is not defined

